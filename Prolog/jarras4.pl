% DE JARRA GRANDE A MEDIANA %
% CASO 1: EXISTE SUFICIENTE CONTENIDO EN LA JARRA DE ORIGEN PARA%
%VACIARLA Y MOVER SU CONTENIDO A LA JARRA DE DESTINO %
vaciar([G, M, C], [0, M2, C]):- RESTO is (5 - M), G =< RESTO, M2 is M + G, M2 =< 5, M2 \== M.
% DE JARRA GRANDE A MEDIANA %
% CASO 2: EL CONTENIDO DE LA JARRA DE ORIGEN ES M�S DEL NECESARIO PARA
%LLENAR LA JARRA DE DESTINO, HAY RESTANTE EN LA JARRA DE ORIGEN %
vaciar([G, M, C], [G2, 5, C]):- RESTO is (5 - M), G > RESTO, G2 is G - RESTO, G2 =< 8, G2 \==
G.
% DE JARRA GRANDE A CHICA %
vaciar([G, M, C], [0, M, C2]):- RESTO is (3 - C), G =< RESTO, C2 is C + G, C2 =< 3, C \== C.
% EL RESTO ES LA CAPACIDAD DE LA JARRA DE DESTINO MENOS EL CONTENIDO
%ACTUAL, SI LA JARRA DE ORIGEN POSEE MENOR O IGUAL CANTIDAD DE LA%
%NECESARIA, SE VAC�A Y MUEVE SU CONTENIDO A LA JARRA DE DESTINO %
vaciar([G, M, C], [G2, M, 3]):- RESTO is (3 - C), G > RESTO, G2 is G - RESTO, G2 =< 8, G2 \==
G.
% SI LA JARRA DE ORIGEN POSEE M�S DEL CONTENIDO NECESARIO, MUEVE LA
%CANTIDAD NECESARIA PARA EL LLENADO DE LA JARRA DE DESTINO Y ALMACENA
%EL CONTENIDO RESTANTE PARA PR�XIMOS MOVIMIENTOS %
% DE JARRA MEDIANA A GRANDE %
vaciar([G, M, C], [G2, 0, C]):- RESTO is (8 - G), M =< RESTO, G2 is G + M, G2 =< 8, G2 \== G.
vaciar([G, M, C], [8, M2, C]):- RESTO is (8 - G), M > RESTO, M2 is M - RESTO, M2 =< 5, M2 \==
M.

% DE JARRA MEDIANA A CHICA %
vaciar([G, M, C], [G, 0, C2]):- RESTO is (3 - C), M =< RESTO, C2 is C + G, C2 =< 3, C2 \== C.
vaciar([G, M, C], [G, M2, 3]):- RESTO is (3 - C), M > RESTO, M2 is M - RESTO, M2 =< 5, M2 \==
M.
% DE JARRA CHICA A GRANDE %
vaciar([G, M, C], [G2, M, 0]):- RESTO is (8 - G), C =< RESTO, G2 is G + C, G2 =< 8, G2 \== G.
vaciar([G, M, C], [8, M, C2]):- RESTO is (8 - G), C > RESTO, C2 is C - RESTO, C2 =< 3, C2 \==
C.
% DE JARRA CHICA A MEDIANA %
vaciar([G, M, C], [G, M2, 0]):- RESTO is (5 - M), C =< RESTO, M2 is M + C, M2 =< 8, M2 \== M.
vaciar([G, M, C], [G, 5, C2]):- RESTO is (5 - M), C > RESTO, C2 is C - RESTO, C2 =< 3, C2 \==
C.
% LA META DEL ALGORITMO ES OBTENER QUE LA PRIMERA JARRA CONTENGA 4
% LITROS, SIN IMPORTAR EL CONTENIDO DE LAS DOS RESTANTES %.
solucionJarras(INICIAL):- solucionJarras(INICIAL, [4, _, _], [INICIAL]).
solucionJarras([4, _, _], _ , CAMINO):- write(CAMINO).
% EL ALGORITMO DE B�SQUEDA EN PROFUNDIDAD UNIFICA DEL ESTADO ACTUAL
%A UN SUCESOR, VERIFICANDO QUE EL SUCESOR NO SE ENCUENTRE EN EL CAMINO
%ACTUAL, UNI�NDOLO PARA ENCONTRAR LA SOLUCI�N SOLICITADA. %
solucionJarras(ESTADO, META, CAMINO):- vaciar(ESTADO, SUCESOR),
 not(member(SUCESOR, CAMINO)),
 append(CAMINO, [SUCESOR], CAMINO_NUEVO),
 solucionJarras(SUCESOR, META, CAMINO_NUEVO).

principal:-solucionJarras([8,0,0]).